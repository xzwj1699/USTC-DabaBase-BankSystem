{"remainingRequest":"/home/xzwj/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzwj/vue-element-admin/src/views/table/guest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xzwj/vue-element-admin/src/views/table/guest.vue","mtime":1624365402621},{"path":"/home/xzwj/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/xzwj/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["guest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"guest.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.Client_ID\" placeholder=\"id\" style=\"width: 50px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.name\" placeholder=\"name\" style=\"width: 80px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.tel\" placeholder=\"tel\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.addr\" placeholder=\"addr\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_name\" placeholder=\"con_name\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_tel\" placeholder=\"con_addr\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_email\" placeholder=\"con_email\" style=\"width: 200px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.relation\" placeholder=\"relation\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        Search\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        Add\n      </el-button>\n      <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n        Export\n      </el-button>\n      <!-- <el-checkbox v-model=\"showReviewer\" class=\"filter-item\" style=\"margin-left:15px;\" @change=\"tableKey=tableKey+1\">\n        reviewer\n      </el-checkbox> -->\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column label=\"Client_ID\" prop=\"id\" align=\"center\" width=\"101px\" :class-name=\"getSortClass('id')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[0] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"name\" width=\"100px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[1] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"tel\" width=\"140px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[2] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"addr\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[3] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"contact_name\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[4] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"contact_tel\" width=\"140px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[5] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"contact_email\" width=\"200px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[6] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"relation\" width=\"140px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[7] }}</span>\n        </template>\n      </el-table-column>\n      <!-- <el-table-column label=\"Readings\" align=\"center\" width=\"95\">\n        <template slot-scope=\"{row}\">\n          <span v-if=\"row.pageviews\" class=\"link-type\" @click=\"handleFetchPv(row.pageviews)\">{{ row.pageviews }}</span>\n          <span v-else>0</span>\n        </template>\n      </el-table-column> -->\n      <!-- <el-table-column label=\"Status\" class-name=\"status-col\" width=\"100\">\n        <template slot-scope=\"{row}\">\n          <el-tag :type=\"row.status | statusFilter\">\n            {{ row.status }}\n          </el-tag>\n        </template>\n      </el-table-column> -->\n      <el-table-column label=\"Actions\" align=\"center\" width=\"235px\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            Edit\n          </el-button>\n          <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n            Delete\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Client_ID\" prop=\"id\">\n          <el-input v-model=\"temp.Client_ID\" />\n        </el-form-item>\n        <el-form-item label=\"name\" prop=\"name\">\n          <el-input v-model=\"temp.name\" />\n        </el-form-item>\n        <el-form-item label=\"Tel\" prop=\"Tel\">\n          <el-input v-model=\"temp.tel\" />\n        </el-form-item>\n        <el-form-item label=\"addr\" prop=\"addr\">\n          <el-input v-model=\"temp.addr\" />\n        </el-form-item>\n        <el-form-item label=\"contact_name\" prop=\"contact_name\">\n          <el-input v-model=\"temp.contact_name\" />\n        </el-form-item>\n        <el-form-item label=\"contact_tel\" prop=\"contact_tel\">\n          <el-input v-model=\"temp.contact_tel\" />\n        </el-form-item>\n        <el-form-item label=\"contact_email\" prop=\"contact_email\">\n          <el-input v-model=\"temp.contact_email\" />\n        </el-form-item>\n        <el-form-item label=\"relation\" prop=\"relation\">\n          <el-input v-model=\"temp.relation\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n      <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column prop=\"key\" label=\"Channel\" />\n        <el-table-column prop=\"pv\" label=\"Pv\" />\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">Confirm</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { search_guest, add_guest, delete_guest, update_guest } from '@/api/guest'\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'Guest',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      data: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        sort: '+id'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      backup_before_update: {\n        Client_ID: '',\n        name: 'xzwj',\n        tel: 10000000000,\n        addr: '',\n        contact_name: '',\n        contact_tel: 10000000000,\n        contact_email: '',\n        relation: ''\n      },\n      temp: {\n        Client_ID: '',\n        name: 'xzwj',\n        tel: 10000000000,\n        addr: '',\n        contact_name: '',\n        contact_tel: 10000000000,\n        contact_email: '',\n        relation: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n        title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      var data = {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        token: this.$store.getters.token\n      }\n      console.log(data)\n      // console.log('debug 2')\n      search_guest(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleFilter() {\n      // console.log('debug 1')\n      var data = {\n        Client_ID: this.listQuery.Client_ID,\n        name: this.listQuery.name,\n        tel: this.listQuery.tel,\n        addr: this.listQuery.addr,\n        contact_name: this.listQuery.contact_name,\n        contact_tel: this.listQuery.contact_tel,\n        contact_email: this.listQuery.contact_email,\n        relation: this.listQuery.relation\n      }\n      console.log(data)\n      // console.log('debug 2')\n      search_guest(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        Client_ID: undefined,\n        name: 'sss',\n        tel: '12256487956',\n        addr: 'ustc 2020',\n        contact_name: 'xsx',\n        contact_tel: '5521124',\n        contact_email: 'xzwj#mia',\n        relation: 'xsa'\n      }\n    },\n    setTemp(row) {\n      this.temp = {\n        Client_ID: row[0],\n        name: row[1],\n        tel: row[2],\n        addr: row[3],\n        contact_name: row[4],\n        contact_tel: row[5],\n        contact_email: row[6],\n        relation: row[7]\n      }\n    },\n    back_up(row) {\n      this.backup_before_update = {\n        Client_ID: row[0],\n        name: row[1],\n        tel: row[2],\n        addr: row[3],\n        contact_name: row[4],\n        contact_tel: row[5],\n        contact_email: row[6],\n        relation: row[7]\n      }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          var data = {\n            Client_ID: this.temp.Client_ID,\n            name: this.temp.name,\n            tel: this.temp.tel,\n            addr: this.temp.addr,\n            contact_name: this.temp.contact_name,\n            contact_tel: this.temp.contact_tel,\n            contact_email: this.temp.contact_email,\n            relation: this.temp.relation\n          }\n          console.log(data)\n          // console.log('debug 2')\n          add_guest(data).then(response => {\n            console.log(response.data)\n            this.list = response.data\n            // this.total = response.data.total\n            this.listLoading = false\n            // Just to simulate the time of the request\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      this.setTemp(row)\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      console.log(row)\n      this.back_up(row)\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          var data = {\n            old_value: this.backup_before_update,\n            new_value: this.temp,\n          }\n          console.log(data)\n          // console.log('debug 2')\n          update_guest(data).then(response => {\n            console.log(response.data)\n            this.listLoading = false\n            this.list = response.data.data\n            this.dialogFormVisible = false\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleDelete(row, index) {\n      this.listLoading = false\n      var data = {\n        Client_ID: row[0],\n        name: row[1],\n        tel: row[2],\n        addr: row[3],\n        contact_name: row[4],\n        contact_tel: row[5],\n        contact_email: row[6],\n        relation: row[7]\n      }\n      console.log(data)\n      // console.log('debug 2')\n      delete_guest(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        this.dialogFormVisible = false\n        this.$notify({\n          title: 'Success',\n          message: 'Delete Successfully',\n          type: 'success',\n          duration: 2000\n        })\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}