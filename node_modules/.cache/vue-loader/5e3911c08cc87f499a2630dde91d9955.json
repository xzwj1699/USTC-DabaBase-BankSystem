{"remainingRequest":"/home/xzwj/newdisk/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzwj/newdisk/vue-element-admin/src/views/table/loan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xzwj/newdisk/vue-element-admin/src/views/table/loan.vue","mtime":1624947927717},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["loan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"loan.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.Loan_ID\" placeholder=\"Loan_ID\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.bank_name\" placeholder=\"bank_name\" style=\"width: 150px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.Loan_Amount\" placeholder=\"Loan_Amount\" style=\"width: 160px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <!-- <el-input v-model=\"listQuery.Pay_Code\" placeholder=\"Pay_Code\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.Client_ID\" placeholder=\"Client_ID\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" /> -->\n      <el-select v-model=\"listQuery.loan_status\" placeholder=\"loan status\" style=\"width: 120px;margin-left: 10px\" class=\"filter-item\">\n        <el-option label=\"not begin\" value=\"not begin\"> </el-option>\n        <el-option label=\"in process\" value=\"in process\"></el-option>\n        <el-option label=\"finish\" value=\"finish\"></el-option>\n      </el-select>\n      <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        Search\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n        Add\n      </el-button>\n      <!-- <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n        Export\n      </el-button> -->\n      <!-- <el-checkbox v-model=\"showReviewer\" class=\"filter-item\" style=\"margin-left:15px;\" @change=\"tableKey=tableKey+1\">\n        reviewer\n      </el-checkbox> -->\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @sort-change=\"sortChange\"\n    >\n      <el-table-column label=\"Loan_ID\" prop=\"Loan_ID\" align=\"center\" width=\"240px\" :class-name=\"getSortClass('id')\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[0] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"bank_name\" width=\"300px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[1] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Loan_Amount\" width=\"290px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[2] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"loan_status\" width=\"280px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[3] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Actions\" align=\"center\" width=\"247px\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"success\" size=\"mini\" @click=\"handleDetail(row)\">\n            Detail\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" @click=\"handlePayLoan(row)\">\n            Pay\n          </el-button>\n          <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n            Delete\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Loan_ID\" prop=\"Loan_ID\">\n          <el-input v-model=\"temp.Loan_ID\" />\n        </el-form-item>\n        <el-form-item label=\"bank_name\" prop=\"bank_name\">\n          <el-input v-model=\"temp.bank_name\" />\n        </el-form-item>\n        <el-form-item label=\"Loan_Amount\" prop=\"Loan_Amount\">\n          <el-input v-model=\"temp.Loan_Amount\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"detailVisible\">\n      <el-table\n        :key=\"tableKey\"\n        v-loading=\"listLoading\"\n        :data=\"detail_list\"\n        border\n        fit\n        highlight-current-row\n        style=\"width: 100%;\"\n      >\n        <el-table-column label=\"Pay_Code\" prop=\"Pay_Code\" align=\"center\" width=\"100px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[0] }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Client_ID\" prop=\"Client_ID\" align=\"center\" width=\"100px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[1] }}</span>\n          </template>\n        </el-table-column>\n         <el-table-column label=\"name\" prop=\"name\" align=\"center\" width=\"120px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[4] }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"tel\" prop=\"tel\" align=\"center\" width=\"160px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[5] }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Pay_Amount\" prop=\"Pay_Amount\" align=\"center\" width=\"120px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[2] }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Pay_Day\" prop=\"Pay_Day\" align=\"center\" width=\"163px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[3] }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"PayloanDialogVisible\">\n      <el-form ref=\"PayLoandataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Pay_Code\" prop=\"Pay_Code\">\n          <el-input v-model=\"temp.Pay_Code\" />\n        </el-form-item>\n        <!-- <el-form-item label=\"Loan_ID\" prop=\"Loan_ID\">\n          <el-input v-model=\"temp.Loan_ID\" />\n        </el-form-item> -->\n        <el-form-item label=\"Client_ID\" prop=\"Client_ID\">\n          <el-input v-model=\"temp.Client_ID\" />\n        </el-form-item>\n        <el-form-item label=\"Pay_Amount\" prop=\"Pay_Amount\">\n          <el-input v-model=\"temp.Pay_Amount\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='payloan'?createPayLoan():updateData()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n      <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column prop=\"key\" label=\"Channel\" />\n        <el-table-column prop=\"pv\" label=\"Pv\" />\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">Confirm</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { search_guest, add_guest, delete_guest, update_guest } from '@/api/guest'\nimport { add_loan, get_loan_list, add_pay_loan, get_loan_detail, delete_loan, search_loan } from '@/api/loan'\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'Loan',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      detail_list: null,\n      data: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        Loan_ID: '',\n        bank_name: '',\n        Loan_Amount: '',\n        Pay_Code: '',\n        Client_ID: '',\n        pay_state: '',\n        loan_status: '',\n        sort: '+id'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      backup_before_update: {\n        Client_ID: '',\n        name: 'xzwj',\n        tel: 10000000000,\n        addr: '',\n        contact_name: '',\n        contact_tel: 10000000000,\n        contact_email: '',\n        relation: ''\n      },\n      temp: {\n        Loan_ID: '',\n        bank_name: '',\n        Loan_Amount: '',\n        Pay_Code: '',\n        Client_ID: '',\n        pay_state: '',\n        Pay_Code: '',\n        Pay_Amount: ''\n      },\n      dialogFormVisible: false,\n      PayloanDialogVisible: false,\n      detailVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create',\n        payloan: 'Pay Loan',\n        detail: 'Loan details'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n        title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      this.listLoading = true\n      var data = {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        token: this.$store.getters.token\n      }\n      console.log(data)\n      // console.log('debug 2')\n      get_loan_list(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleDetail(row) {\n      this.dialogStatus = 'detail'\n      this.detailVisible = true\n      var data = {\n        Loan_ID : row[0]\n      }\n      get_loan_detail(data).then(response => {\n        console.log('loan detail')\n        this.detail_list = response.data\n        console.log(response.data)\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        // this.dialogFormVisible_1 = false\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleFilter() {\n      // console.log('debug 1')\n      var data = {\n        Loan_ID: this.listQuery.Loan_ID,\n        bank_name: this.listQuery.bank_name,\n        Loan_Amount: this.listQuery.Loan_Amount,\n        loan_status: this.listQuery.loan_status\n      }\n      console.log('handle filter')\n      console.log(data)\n      // console.log('debug 2')\n      search_loan(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    sortChange(data) {\n      const { prop, order } = data\n      if (prop === 'id') {\n        this.sortByID(order)\n      }\n    },\n    sortByID(order) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+id'\n      } else {\n        this.listQuery.sort = '-id'\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      this.temp = {\n        Loan_ID: undefined,\n        bank_name: 'ustc-bank',\n        Loan_Amount: '1200'\n      }\n    },\n    setTemp(row) {\n      this.temp = {\n        Client_ID: row[0],\n        name: row[1],\n        tel: row[2],\n        addr: row[3],\n        contact_name: row[4],\n        contact_tel: row[5],\n        contact_email: row[6],\n        relation: row[7]\n      }\n    },\n    back_up(row) {\n      this.backup_before_update = {\n        Client_ID: row[0],\n        name: row[1],\n        tel: row[2],\n        addr: row[3],\n        contact_name: row[4],\n        contact_tel: row[5],\n        contact_email: row[6],\n        relation: row[7]\n      }\n    },\n    handleCreate() {\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          var data = {\n            Loan_ID: this.temp.Loan_ID,\n            bank_name: this.temp.bank_name,\n            Loan_Amount: this.temp.Loan_Amount\n          }\n          console.log(data)\n          // console.log('debug 2')\n          add_loan(data).then(response => {\n            console.log(response.data)\n            this.list = response.data\n            // this.total = response.data.total\n            this.listLoading = false\n            // Just to simulate the time of the request\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handlePayLoan(row) {\n      this.temp.Loan_ID = row[0]\n      this.dialogStatus = 'payloan'\n      this.PayloanDialogVisible = true\n      console.log(row)\n      this.back_up(row)\n      this.$nextTick(() => {\n        this.$refs['PayLoandataForm'].clearValidate()\n      })\n    },\n    createPayLoan() {\n      this.$refs['PayLoandataForm'].validate((valid) => {\n        if (valid) {\n          var data = {\n            Pay_Code: this.temp.Pay_Code,\n            Loan_ID: this.temp.Loan_ID,\n            Client_ID: this.temp.Client_ID,\n            Pay_Amount: this.temp.Pay_Amount\n          }\n          console.log(data)\n          // console.log('debug 2')\n          add_pay_loan(data).then(response => {\n            console.log(response.data)\n            this.list = response.data\n            // this.total = response.data.total\n            this.listLoading = false\n            // Just to simulate the time of the request\n            this.PayloanDialogVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Pay Loan Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    updateData() {\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          var data = {\n            old_value: this.backup_before_update,\n            new_value: this.temp,\n          }\n          console.log(data)\n          // console.log('debug 2')\n          update_guest(data).then(response => {\n            console.log(response.data)\n            this.listLoading = false\n            this.list = response.data\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleDelete(row, index) {\n      this.listLoading = false\n      var data = {\n        Loan_ID: row[0],\n        loan_status: row[3]\n      }\n      console.log(data)\n      // console.log('debug 2')\n      delete_loan(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        this.dialogFormVisible = false\n        this.$notify({\n          title: 'Success',\n          message: 'Delete Successfully',\n          type: 'success',\n          duration: 2000\n        })\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}