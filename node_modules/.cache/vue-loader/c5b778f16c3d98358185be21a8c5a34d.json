{"remainingRequest":"/home/xzwj/newdisk/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/xzwj/newdisk/vue-element-admin/src/views/table/account.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/xzwj/newdisk/vue-element-admin/src/views/table/account.vue","mtime":1624947911821},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/xzwj/newdisk/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"account.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.Client_ID\" placeholder=\"id\" style=\"width: 50px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.name\" placeholder=\"name\" style=\"width: 80px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.tel\" placeholder=\"tel\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.addr\" placeholder=\"addr\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_name\" placeholder=\"con_name\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_tel\" placeholder=\"con_addr\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.contact_email\" placeholder=\"con_email\" style=\"width: 200px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.relation\" placeholder=\"relation\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.bank_name\" placeholder=\"bank_name\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.account_id\" placeholder=\"account_id\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.balance\" placeholder=\"balance\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.opendate\" placeholder=\"opendate\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.recent_visit_date\" placeholder=\"recent_visit_date\" style=\"width: 180px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-input v-model=\"listQuery.count_type\" placeholder=\"count_type\" style=\"width: 120px;margin-left: 10px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n        Search\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate_1\">\n        Add Saving\n      </el-button>\n      <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate_2\">\n        Add Checking\n      </el-button>\n      <!-- <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n        Export\n      </el-button> -->\n    </div>\n\n    <el-table\n      :key=\"tableKey\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 95%;\"\n    >\n      <el-table-column label=\"Client_ID\" prop=\"id\" align=\"center\" width=\"152px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[0] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"name\" prop=\"name\" align=\"center\" width=\"170px\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[1] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"bank_name\" prop=\"bank_name\" width=\"182px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[2] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"account_id\" prop=\"account_id\" width=\"181px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[3] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"balance\" prop=\"balance\" width=\"180px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[4] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"count_type\" prop=\"count_type\" width=\"181px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row[5] }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Actions\" align=\"center\" width=\"230\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <el-button type=\"success\" size=\"mini\" @click=\"handleDetail(row)\">\n            Detail\n          </el-button>\n          <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n            Edit\n          </el-button>\n          <el-button v-if=\"row.status!='deleted'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n            Delete\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible_1\">\n      <el-form ref=\"dataForm1\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Client_ID\" prop=\"id\">\n          <el-input v-model=\"temp.Client_ID\" />\n        </el-form-item>\n        <el-form-item label=\"account_id\" prop=\"account_id\">\n          <el-input v-model=\"temp.account_id\" />\n        </el-form-item>\n        <el-form-item label=\"bank_name\" prop=\"bank_name\">\n          <el-input v-model=\"temp.bank_name\" />\n        </el-form-item>\n        <el-form-item label=\"balance\" prop=\"balance\" type='Number'>\n          <el-input v-model=\"temp.balance\" />\n        </el-form-item>\n        <el-form-item label=\"interest_rate\" prop=\"interest_rate\" type='Number'>\n          <el-input v-model=\"temp.interest_rate\" />\n        </el-form-item>\n        <el-form-item label=\"currency_type\" prop=\"currency_type\">\n          <el-input v-model=\"temp.currency_type\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible_1 = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create_saving'?createData_1():updateData_1()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible_2\">\n      <el-form ref=\"dataForm2\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"Client_ID\" prop=\"id\">\n          <el-input v-model=\"temp.Client_ID\" />\n        </el-form-item>\n        <el-form-item label=\"account_id\" prop=\"account_id\">\n          <el-input v-model=\"temp.account_id\" />\n        </el-form-item>\n        <el-form-item label=\"bank_name\" prop=\"bank_name\">\n          <el-input v-model=\"temp.bank_name\" />\n        </el-form-item>\n        <el-form-item label=\"balance\" prop=\"balance\" type='Number'>\n          <el-input v-model=\"temp.balance\" />\n        </el-form-item>\n        <el-form-item label=\"over_draft\" prop=\"over_draft\" type='Number'>\n          <el-input v-model=\"temp.over_draft\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible_2 = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create_checking'?createData_2():updateData_2()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible_3\">\n      <el-table\n        :key=\"tableKey\"\n        v-loading=\"listLoading\"\n        :data=\"detail_list\"\n        border\n        fit\n        highlight-current-row\n        style=\"width: 100%;\"\n      >\n        <el-table-column label=\"attribute\" prop=\"attribute\" align=\"center\" width=\"223px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[0] }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"value\" prop=\"value\" align=\"center\" width=\"540px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row[1] }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"dialogPvVisible\" title=\"Reading statistics\">\n      <el-table :data=\"pvData\" border fit highlight-current-row style=\"width: 100%\">\n        <el-table-column prop=\"key\" label=\"Channel\" />\n        <el-table-column prop=\"pv\" label=\"Pv\" />\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"dialogPvVisible = false\">Confirm</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { fetchList, fetchPv, createArticle, updateArticle } from '@/api/article'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport { add_saving_account, add_checking_account, search_account, delete_account, get_account_info } from '@/api/account'\nimport { update_saving_account, update_checking_account, get_user_account_detail } from '@/api/account'\n\nconst calendarTypeOptions = [\n  { key: 'CN', display_name: 'China' },\n  { key: 'US', display_name: 'USA' },\n  { key: 'JP', display_name: 'Japan' },\n  { key: 'EU', display_name: 'Eurozone' }\n]\n\n// arr to obj, such as { CN : \"China\", US : \"USA\" }\nconst calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name\n  return acc\n}, {})\n\nexport default {\n  name: 'Account',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    typeFilter(type) {\n      return calendarTypeKeyValue[type]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      detail_list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        bank_name: '',\n        account_id: '',\n        balance: '',\n        opendate: '',\n        recent_visit_date: '',\n        count_type: '',\n        interest_rate: '',\n        currency_type: '',\n        over_draft: '',\n        sort: '+id'\n      },\n      importanceOptions: [1, 2, 3],\n      calendarTypeOptions,\n      sortOptions: [{ label: 'ID Ascending', key: '+id' }, { label: 'ID Descending', key: '-id' }],\n      statusOptions: ['published', 'draft', 'deleted'],\n      showReviewer: false,\n      temp: {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        bank_name: '',\n        account_id: '',\n        balance: '',\n        opendate: '',\n        recent_visit_date: '',\n        count_type: '',\n        interest_rate: '',\n        currency_type: '',\n        over_draft: '',\n        sort: '+id'\n      },\n      back_up_before_update: {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        bank_name: '',\n        account_id: '',\n        balance: '',\n        opendate: '',\n        recent_visit_date: '',\n        count_type: '',\n        interest_rate: '',\n        currency_type: '',\n        over_draft: '',\n        sort: '+id'\n      },\n      dialogFormVisible_1: false,\n      dialogFormVisible_2: false,\n      dialogFormVisible_3: false,\n      dialogFormVisible_4: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create_checking: 'Create checking account',\n        create_saving: 'Create saving account',\n        show_detail: 'Account Details'\n      },\n      dialogPvVisible: false,\n      pvData: [],\n      rules: {\n        type: [{ required: true, message: 'type is required', trigger: 'change' }],\n        timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],\n        title: [{ required: true, message: 'title is required', trigger: 'blur' }]\n      },\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      var data = {\n        Client_ID: '',\n        name: '',\n        tel: '',\n        addr: '',\n        contact_name: '',\n        contact_tel: '',\n        contact_email: '',\n        relation: '',\n        bank_name: '',\n        account_id: '',\n        balance: '',\n        open_date: '',\n        recent_visit_date: '',\n        count_type: ''\n      }\n      console.log(data)\n      search_account(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleFilter() {\n      var data = {\n        Client_ID: this.listQuery.Client_ID,\n        name: this.listQuery.name,\n        tel: this.listQuery.tel,\n        addr: this.listQuery.addr,\n        contact_name: this.listQuery.contact_name,\n        contact_tel: this.listQuery.contact_tel,\n        contact_email: this.listQuery.contact_email,\n        relation: this.listQuery.relation,\n        bank_name: this.listQuery.bank_name,\n        account_id: this.listQuery.account_id,\n        balance: this.listQuery.balance,\n        open_date: this.listQuery.opendate,\n        recent_visit_date: this.listQuery.recent_visit_date,\n        count_type: this.listQuery.count_type\n      }\n      console.log(data)\n      search_account(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleModifyStatus(row, status) {\n      this.$message({\n        message: '操作Success',\n        type: 'success'\n      })\n      row.status = status\n    },\n    resetTemp() {\n      this.temp = {\n        Client_ID: '',\n        name: 'xzwj',\n        tel: '13255561448',\n        addr: 'ustc',\n        contact_name: 'xsa',\n        contact_tel: 'csac',\n        contact_email: 'cas',\n        relation: 'csa',\n        bank_name: 'ustc-bank',\n        account_id: '',\n        balance: '1200',\n        opendate: '',\n        recent_visit_date: '',\n        count_type: '',\n        interest_rate: '0.12',\n        currency_type: 'dollar',\n        over_draft: '1200',\n        sort: '+id'\n      }\n    },\n    handleDetail(row) {\n      this.dialogStatus = 'show_detail'\n      this.dialogFormVisible_3 = true\n      var data = {\n        Client_ID : row[0],\n        account_id: row[3],\n        count_type: row[5]\n      }\n      get_user_account_detail(data).then(response => {\n        console.log('account detail')\n        console.log(response)\n        this.detail_list = response.data\n        console.log(response.data)\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        // this.dialogFormVisible_1 = false\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleCreate_1() {\n      this.resetTemp()\n      this.dialogStatus = 'create_saving'\n      this.dialogFormVisible_1 = true\n      this.$nextTick(() => {\n        this.$refs['dataForm1'].clearValidate()\n      })\n    },\n    createData_1() {\n      this.$refs['dataForm1'].validate((valid) => {\n        if (valid) {\n          var data = {\n            Client_ID: this.temp.Client_ID,\n            account_id: this.temp.account_id,\n            bank_name: this.temp.bank_name,\n            balance: this.temp.balance,\n            interest_rate: this.temp.interest_rate,\n            currency_type: this.temp.currency_type\n          }\n          console.log(data)\n          add_saving_account(data).then(response => {\n            console.log(response.data)\n            this.list = response.data\n            // this.total = response.data.total\n            this.listLoading = false\n            // Just to simulate the time of the request\n            this.dialogFormVisible_1 = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleCreate_2() {\n      this.resetTemp()\n      this.dialogStatus = 'create_checking'\n      this.dialogFormVisible_2 = true\n      this.$nextTick(() => {\n        this.$refs['dataForm2'].clearValidate()\n      })\n    },\n    createData_2() {\n      this.$refs['dataForm2'].validate((valid) => {\n        if (valid) {\n          // this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id\n          // this.temp.author = 'vue-element-admin'\n          var data = {\n            Client_ID: this.temp.Client_ID,\n            account_id: this.temp.account_id,\n            bank_name: this.temp.bank_name,\n            balance: this.temp.balance,\n            over_draft: this.temp.over_draft\n          }\n          console.log('in add checking account in vue file')\n          console.log(data)\n          add_checking_account(data).then(response => {\n            console.log(response.data)\n            this.list = response.data\n            // this.total = response.data.total\n            this.listLoading = false\n            // Just to simulate the time of the request\n            this.dialogFormVisible_2 = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      if(row[5] == 0){\n        this.handleUpdate_1(row)\n      }\n      else if(row[5] == 1){\n        this.handleUpdate_2(row)\n      }\n    },\n    handleUpdate_1(row) {\n      var data = {\n        Client_ID: row[0],\n        account_id: row[3],\n        count_type: row[5]\n      }\n      get_account_info(data).then(response => {\n        this.temp.Client_ID = row[0]\n        this.temp.account_id = row[3]\n        this.temp.bank_name = row[2]\n        this.temp.balance = row[4]\n        this.temp.interest_rate = response.data[0][1]\n        this.temp.currency_type = response.data[0][2]\n        this.back_up_before_update.Client_ID = row[0]\n        this.back_up_before_update.account_id = row[3]\n        this.back_up_before_update.bank_name = row[2]\n        this.back_up_before_update.balance = row[4]\n        this.back_up_before_update.interest_rate = response.data[0][1]\n        this.back_up_before_update.currency_type = response.data[0][2]\n      })\n      this.dialogStatus = 'update'\n      this.dialogFormVisible_1 = true\n      this.$nextTick(() => {\n        this.$refs['dataForm1'].clearValidate()\n      })\n    },\n    updateData_1() {\n      this.$refs['dataForm1'].validate((valid) => {\n        if (valid) {\n          var data = {\n            old_value: this.back_up_before_update,\n            new_value: this.temp\n          }\n          update_saving_account(data).then(response => {\n            console.log(response.data)\n            this.listLoading = false\n            this.list = response.data\n            this.dialogFormVisible_1 = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleUpdate_2(row) {\n      var data = {\n        Client_ID: row[0],\n        account_id: row[3],\n        count_type: row[5]\n      }\n      get_account_info(data).then(response => {\n        this.temp.Client_ID = row[0]\n        this.temp.account_id = row[3]\n        this.temp.bank_name = row[2]\n        this.temp.balance = row[4]\n        this.temp.over_draft = response.data[0][1]\n        this.back_up_before_update.Client_ID = row[0]\n        this.back_up_before_update.account_id = row[3]\n        this.back_up_before_update.bank_name = row[2]\n        this.back_up_before_update.balance = row[4]\n        this.back_up_before_update.over_draft = response.data[0][1]\n      })\n      this.dialogStatus = 'update'\n      this.dialogFormVisible_2 = true\n      this.$nextTick(() => {\n        this.$refs['dataForm2'].clearValidate()\n      })\n    },\n    updateData_2() {\n      this.$refs['dataForm2'].validate((valid) => {\n        if (valid) {\n          var data = {\n            old_value: this.back_up_before_update,\n            new_value: this.temp\n          }\n          update_checking_account(data).then(response => {\n            console.log(response.data)\n            this.listLoading = false\n            this.list = response.data\n            this.dialogFormVisible_2 = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n            setTimeout(() => {\n              this.listLoading = false\n            }, 1.5 * 1000)\n          })\n        }\n      })\n    },\n    handleDelete(row, index) {\n      var data = {\n        Client_ID: row[0],\n        name: row[1],\n        bank_name: row[2],\n        account_id: row[3],\n        balance: row[4],\n        count_type: row[5]\n      }\n      delete_account(data).then(response => {\n        console.log(response.data)\n        this.list = response.data\n        // this.total = response.data.total\n        this.listLoading = false\n        // Just to simulate the time of the request\n        this.dialogFormVisible = false\n        this.$notify({\n          title: 'Success',\n          message: 'Delete Successfully',\n          type: 'success',\n          duration: 2000\n        })\n        setTimeout(() => {\n          this.listLoading = false\n        }, 1.5 * 1000)\n      })\n    },\n    handleFetchPv(pv) {\n      fetchPv(pv).then(response => {\n        this.pvData = response.data.pvData\n        this.dialogPvVisible = true\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>"]}]}